const db = require('./database');
const config = require('./config');

async function handleAddTask(bot, msg) {
  const chatId = msg.chat.id;
  if (!config.adminIds.includes(chatId)) {
    return bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
  }

  bot.sendMessage(chatId, `
–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
–õ–∏–º–∏—Ç_–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–π –ù–∞–≥—Ä–∞–¥–∞ ID_–∫–∞–Ω–∞–ª–∞ –°—Å—ã–ª–∫–∞_–Ω–∞_–∫–∞–Ω–∞–ª

–ü—Ä–∏–º–µ—Ä:
1 2 -1002211473340 https://t.me/jskaaow

–ì–¥–µ:
1) –õ–∏–º–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–π - —Å–∫–æ–ª—å–∫–æ –ª—é–¥–µ–π –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ
2) –ù–∞–≥—Ä–∞–¥–∞ - —Å–∫–æ–ª—å–∫–æ UC –ø–æ–ª—É—á–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
3) ID –∫–∞–Ω–∞–ª–∞
4) –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª
  `);

  bot.once('message', async (taskMsg) => {
    const [limit, reward, channelId, channelUrl] = taskMsg.text.split(' ');
    
    if (!limit || !reward || !channelId || !channelUrl) {
      return bot.sendMessage(chatId, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }

    const newTask = {
      limit: parseInt(limit),
      reward: parseFloat(reward),
      channelId,
      channelUrl,
      completions: 0
    };

    try {
      const savedTask = await db.saveTask(newTask);
      bot.sendMessage(chatId, `–ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Å ID: ${savedTask.id}`);

      // –û–ø–æ–≤–µ—â–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ –Ω–æ–≤–æ–º –∑–∞–¥–∞–Ω–∏–∏
      const users = await db.getAllUsers();
      const notificationMessage = `
üÜï –ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ!

üí∞ –ù–∞–≥—Ä–∞–¥–∞: ${reward} UC
üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: ${limit}

–°–∫–æ—Ä–µ–µ –ø—Ä–∏—Å—Ç—É–ø–∞–π—Ç–µ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é, –ø–æ–∫–∞ –µ—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞!
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /tasks, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è.
      `;

      let notifiedCount = 0;
      for (const user of users) {
        try {
          await bot.sendMessage(user.telegramId, notificationMessage);
          notifiedCount++;
        } catch (error) {
          console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.telegramId}:`, error);
        }
      }

      bot.sendMessage(chatId, `–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–¥–∞–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${notifiedCount} –∏–∑ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞–Ω–∏—è:', error);
      bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });
}

async function handleAddRequiredChannel(bot, msg) {
  const chatId = msg.chat.id;
  if (!config.adminIds.includes(chatId)) {
    return bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
  }

  bot.sendMessage(chatId, `
–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
ID_–∫–∞–Ω–∞–ª–∞ –°—Å—ã–ª–∫–∞_–Ω–∞_–∫–∞–Ω–∞–ª

–ü—Ä–∏–º–µ—Ä:
-1002211473340 https://t.me/jskaaow
  `);

  bot.once('message', async (channelMsg) => {
    const [channelId, channelUrl] = channelMsg.text.split(' ');
    
    if (!channelId || !channelUrl) {
      return bot.sendMessage(chatId, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }

    const newRequiredChannel = {
      channelId,
      channelUrl
    };

    try {
      await db.addRequiredChannel(newRequiredChannel);
      bot.sendMessage(chatId, `–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞:', error);
      bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });
}

async function handleBroadcast(bot, msg) {
  const chatId = msg.chat.id;
  if (!config.adminIds.includes(chatId)) {
    return bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
  }

  bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:');

  bot.once('message', async (broadcastMsg) => {
    try {
      const users = await db.getAllUsers();
      let successCount = 0;
      let failCount = 0;

      for (const user of users) {
        try {
          await bot.sendMessage(user.telegramId, broadcastMsg.text);
          successCount++;
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.telegramId}:`, error);
          failCount++;
        }
      }

      bot.sendMessage(chatId, `–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${successCount}\n–û—à–∏–±–æ–∫: ${failCount}`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏:', error);
      bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });
}

async function handleAdminStats(bot, msg) {
  const chatId = msg.chat.id;
  if (!config.adminIds.includes(chatId)) {
    return bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
  }

  try {
    const users = await db.getAllUsers();
    const tasks = await db.getTasks();
    const requiredChannels = await db.getRequiredChannels();

    const statsMessage = `
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:

üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}
üìù –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π: ${tasks.length}
üì¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: ${requiredChannels.length}
üí∞ –í—Å–µ–≥–æ –≤—ã–¥–∞–Ω–æ UC: ${users.reduce((sum, user) => sum + user.uc, 0)}
    `;

    bot.sendMessage(chatId, statsMessage);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

module.exports = {
  handleAddTask,
  handleAddRequiredChannel,
  handleBroadcast,
  handleAdminStats
};